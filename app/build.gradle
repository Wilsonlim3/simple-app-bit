apply plugin: 'com.android.application'
apply plugin: 'realm-android'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.restapipractice"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "default"
//Flavors = untuk mengganti end point, pilih SERVER_URL dari build variant di tab kiri
    productFlavors {
        apiary {
            applicationIdSuffix ".apiary"
            resValue "string", "app_name", "CleanApp Apiary"
            buildConfigField "String", "SERVER_URL", String.format("\"%s\"", apiaryUrl)
        }
        dev {
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "CleanApp Dev"
            buildConfigField "String", "SERVER_URL", String.format("\"%s\"", devUrl)
        }
        uat {
            applicationIdSuffix ".uat"
            resValue "string", "app_name", "CleanApp Uat"
            buildConfigField "String", "SERVER_URL", String.format("\"%s\"", uatUrl)
        }
        production {
            resValue "string", "app_name", "CleanApp"
            buildConfigField "String", "SERVER_URL", String.format("\"%s\"", prodUrl)
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'apiary'
                || (variant.buildType.name == 'debug' && variant.getFlavors().get(0).name == 'production')) {
            variant.setIgnore(true)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'androidx.appcompat:appcompat:1.0.0-alpha3'
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0-beta01'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test:runner:1.0.0-beta01'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

//    implementation 'com.jakewharton:butterknife:9.0.0-SNAPSHOT'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-SNAPSHOT'
    // butterknife
    implementation 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'

    // retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    // rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
}
